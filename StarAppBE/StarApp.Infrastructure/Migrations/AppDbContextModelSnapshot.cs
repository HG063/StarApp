// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StarApp.Infrastructure.Data;

#nullable disable

namespace StarApp.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("StarApp.Core.Domain.Entities.Allowance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AfternoonShiftDays")
                        .HasColumnType("int");

                    b.Property<int?>("CompensationId")
                        .HasColumnType("int");

                    b.Property<int>("DaysEligibleForTA")
                        .HasColumnType("int");

                    b.Property<int>("HolidayHours")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NightShiftDays")
                        .HasColumnType("int");

                    b.Property<string>("PeriodEnd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PeriodStart")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Project")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProjectHours")
                        .HasColumnType("int");

                    b.Property<string>("SapId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalAllowance")
                        .HasColumnType("int");

                    b.Property<int>("TransportAllowance")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompensationId");

                    b.ToTable("Allowances");
                });

            modelBuilder.Entity("StarApp.Core.Domain.Entities.Compensation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AfternoonShiftCompensation")
                        .HasColumnType("int");

                    b.Property<int>("NightShiftCompensation")
                        .HasColumnType("int");

                    b.Property<int>("TransportCompensation")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Compensations");
                });

            modelBuilder.Entity("StarApp.Core.Domain.Entities.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("ActiveFrom")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("StarApp.Core.Domain.Entities.Allowance", b =>
                {
                    b.HasOne("StarApp.Core.Domain.Entities.Compensation", "Compensation")
                        .WithMany("Allowances")
                        .HasForeignKey("CompensationId");

                    b.Navigation("Compensation");
                });

            modelBuilder.Entity("StarApp.Core.Domain.Entities.Compensation", b =>
                {
                    b.Navigation("Allowances");
                });
#pragma warning restore 612, 618
        }
    }
}
